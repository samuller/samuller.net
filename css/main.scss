---
# Only the main Sass file needs front matter (the dashes are enough)
---
@charset "utf-8";

//
// Setup variables to be used by imports
//

// Our variables
$base-font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
$base-font-size:   16px;
$base-font-weight: 400;
$small-font-size:  $base-font-size * 0.875;
$base-line-height: 1.5;

$background-image: url('../img/background.png');

$spacing-unit:     15px;


$brand-color:      rgb(45, 175, 200);

$grey-color:       #828282;
$grey-color-light: lighten($grey-color, 40%);
$grey-color-dark:  darken($grey-color, 25%);

// Width of the content area
$content-width:    800px;

$on-palm:          600px;
$on-laptop:        800px;

html {
    --content-background: rgba(0, 0, 0, .5);
    // unquote() hack needed because Ruby SASS has bug parsing variables that use url()
    // #{} needed for CSS variables?
    // https://stackoverflow.com/questions/25136523/ignore-parts-of-sass-file-for-parsing
    --background-image: #{unquote("url('../img/background.png')")}; // linear-gradient(to right, #71B280, #134E5E)
    --background-color: #1f6d65; // rgb(31, 109, 101)
    --text-color-rgb: 204,204,204;
    --site-title-color: white;
    --section-title-color: #ddd;
    --section-bg-color: rgba(26, 26, 26, 0.5);
    // --a-text-decoration: none;
    // --section-text-decoration: none;
}
// text, underline, background, title-text
html[data-theme="dark"] {
    --content-background: rgba(0, 0, 0, .65);
    // --background-image: url('../img/background.png');
    --background-color: #1f6d65; // rgb(31, 109, 101)
    --text-color-rgb: 204,204,204;
}
html[data-theme="white"] {
    --content-background: white; // rgba(246, 246, 239, 0.7);
    --background-image: none;
    --background-color: white;
    --text-color-rgb: 0,0,0;
    --site-title-color: black;
    --section-title-color: black;
    --section-bg-color: rgba(156, 156, 156, 0.5);
    // --image-filter: grayscale(50%);
    // --a-text-decoration: underline;
    // --section-text-decoration: underline;
}

// Use media queries like this:
// @include media-query($on-palm) {
//     .wrapper {
//         padding-right: $spacing-unit / 2;
//         padding-left: $spacing-unit / 2;
//     }
// }
@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}

@mixin shadow-box {
   	// color: rgb(var(--text-color-rgb));
    background: var(--content-background);
    background-clip: padding-box;
    border: 0px solid rgba(128, 128, 128, .5); /*8px*/
}

@media print {    
    .no-print, .no-print * {
        display: none !important;
    }
}

@media screen {    
    .only-print, .only-print * {
        display: none !important;
    }
}

.svg-center-overlay {
    text-align: center;
    position: absolute
}

.float-right {
    float: right;
}

.hover-highlight {
    background-color: rgba(255,255,255,0.2);
}

.hover-highlight:hover {
    background-color: rgba(255,255,255,0.5);
}

.darken-till-hover {
    filter: brightness(50%);
}

.darken-till-hover:hover {
    filter: brightness(100%);
}

// Make figure captions align with figure
// https://stackoverflow.com/questions/6534473/how-can-i-make-the-width-of-my-figcaption-match-the-width-of-the-img-inside
.image {
    display: table;
}
.image figcaption {
    // display: table-caption;
    caption-side: bottom;

    text-align: center;
    background-color: #222;
    color: #fff;
}

// Import partials from `sass_dir` (defaults to `_sass`)
@import
        "base",
        "layout",
        "syntax-highlighting"
;


/* Use Monokai theme for syntax highlighting */
@import "monokai";
/* Set background color for inline code */
code {
    /* Use lighter version of Monakai's background colour*/
    background-color: lighten(#272822, 10%);
    border-color: #303030;
    color: #c0c0c0;
}
/**
* Set background for code blocks to be different from inline code.
* We set no color so that Monokai's .highlight color is visible.
*/
pre, pre code {
    background-color: transparent;
    overflow-x: auto;
}
.highlighter-rouge .highlight {
    background-color: unset;
}
